# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pytest with Flake8

# Uncomment the "on" statement to activate on Github Actions
# on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10"]
        numpy_ver: ["latest"]
        include:
          # NEP29 compliance settings
          - python-version: "3.8"
            numpy_ver: "1.20"
            os: "ubuntu-latest"
          # Operational compliance settings
          - python-version: "3.6.8"
            numpy_ver: "1.19.5"
            os: "ubuntu-20.04"

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }} with numpy ${{ matrix.numpy_ver }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install NEP29/Operational dependencies
      if: ${{ matrix.numpy_ver != 'latest'}}
      run: |
        pip install --no-binary :numpy: numpy==${{ matrix.numpy_ver }}

    - name: Install standard dependencies and pysat
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python setup.py install

    - name: Install requirements for testing setup
      run: pip install -r test_requirements.txt

    - name: Set up pysat
      run: |
        mkdir pysatData
        python -c "import pysat; pysat.params['data_dirs'] = 'pysatData'"

    - name: Test PEP8 compliance
      run: flake8 . --count --select=D,E,F,H,W --show-source --statistics

    - name: Evaluate complexity
      run: flake8 . --count --exit-zero --max-complexity=10 --statistics

    # Replace PACKAGENAME with package name.
    - name: Test with pytest
      run: pytest --cov=PACKAGENAME/

    - name: Publish results to coveralls
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --rcfile=setup.cfg --service=github
